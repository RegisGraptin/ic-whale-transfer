
type State = record {
  timer_id: nat;      // Option<TimerId> is equivalent to ?TimerId in Motoko.
  logs: vec text;            // Vec<String> translates to [Text] in Motoko.
  poll_count: nat;         // usize is generally represented by Nat in Motoko.
};

type Result = variant { Ok : text; Err : text };

service : {
  "watch_usdc_transfer_start": () -> (Result);
  "watch_usdc_transfer_stop": () -> (Result);
  "watch_usdc_transfer_is_polling": () -> (Result);
  "watch_usdc_transfer_poll_count": () -> (Result);
  "watch_usdc_transfer_get": () -> (Result);
};